# -*- coding: utf-8 -*-
from keras.preprocessing.image import ImageDataGenerator
from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D
from keras.layers import Activation, Dropout, Flatten, Dense
from keras import backend as K
import os

# dimensions of our images.
img_width, img_height = 3, 3

train_data_dir = os.getcwd()+'/Desktop/Project/Images/Animals/Train'


import numpy as np
from scipy.sparse.linalg import cg
import csv
from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array


def createOptimizationData():
     test_data_dir = os.getcwd()+'/Desktop/Project/Images/Animals/Test'
     with open("prediction_Trees.csv", "w") as f:
        p_writer = csv.writer(f, delimiter=',', lineterminator='\n')
        for _, _, imgs in os.walk(test_data_dir):
            for im in imgs:
                if im == ".DS_Store":
                    continue
                print ("image:{}".format(im))
                pic_id = im.split(".")[0]
                imgPath = os.path.join(test_data_dir + "/animals",im)
                img = load_img(imgPath, target_size=(img_width, img_height), color_mode = "grayscale")
                test_x = img_to_array(img).reshape(img_width, img_height)
                print(test_x);
    
                     
createOptimizationData();
